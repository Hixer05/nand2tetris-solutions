// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    // select addr
    DMux8Way(in=load, sel=address, a=as,b=bs,c=cs,d=ds,e=es,f=fs,g=gs,h=hs);

    // this gets in the way with the register later, but for a ROM it woul work :)
    // Mux8Way16(a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h, sel=address, out=out);

    Register(in=in, load=as, out=outa);
    Register(in=in, load=bs, out=outb);
    Register(in=in, load=cs, out=outc);
    Register(in=in, load=ds, out=outd);
    Register(in=in, load=es, out=oute);
    Register(in=in, load=fs, out=outf);
    Register(in=in, load=gs, out=outg);
    Register(in=in, load=hs, out=outh);
    Mux8Way16(a=outa, b=outb, c=outc, d=outd, e=oute,f=outf,g=outg,h=outh, sel=address,out=out);
}
